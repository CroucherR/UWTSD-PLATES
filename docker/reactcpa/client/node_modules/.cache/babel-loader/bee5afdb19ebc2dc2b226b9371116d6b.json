{"ast":null,"code":"var _jsxFileName = \"/Users/rileycroucher/repos/UWTSD/reactcpa/client/src/SearchPlates.js\",\n    _s = $RefreshSig$();\n\nimport axios from \"axios\";\nimport { useEffect, useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction SearchPlates() {\n  _s();\n\n  const [plate, setPlate] = useState([]);\n  const [id, setId] = useState(1);\n  useEffect(() => {\n    axios.get('http://localhost:8080/plates/search/findByRegistrationplateContainingIgnoreCase?registrationplate=' + id, {\n      mode: 'no-cors'\n    }).then(res => {\n      console.log(res);\n      setPlate(res.data._embedded.plates);\n    }).catch(err => {\n      console.log(err);\n    });\n  }, [id]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Search for a Plate\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      value: id,\n      onChange: e => setId(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: plate.map(plate => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [plate.registrationplate, \" - \\xA3\", plate.cost]\n      }, plate.plateid, true, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 40\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 9\n  }, this);\n}\n\n_s(SearchPlates, \"MTofuBcTfpcWHAowRWquqPawLRY=\");\n\n_c = SearchPlates;\nexport default SearchPlates;\n\nvar _c;\n\n$RefreshReg$(_c, \"SearchPlates\");","map":{"version":3,"sources":["/Users/rileycroucher/repos/UWTSD/reactcpa/client/src/SearchPlates.js"],"names":["axios","useEffect","useState","SearchPlates","plate","setPlate","id","setId","get","mode","then","res","console","log","data","_embedded","plates","catch","err","e","target","value","map","registrationplate","cost","plateid"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,SAAR,EAAmBC,QAAnB,QAAkC,OAAlC;;;AAGA,SAASC,YAAT,GAAwB;AAAA;;AACpB,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBH,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAM,CAACI,EAAD,EAAIC,KAAJ,IAAaL,QAAQ,CAAC,CAAD,CAA3B;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACZD,IAAAA,KAAK,CAACQ,GAAN,CAAU,uGAAqGF,EAA/G,EAAmH;AAACG,MAAAA,IAAI,EAAG;AAAR,KAAnH,EACKC,IADL,CACUC,GAAG,IAAG;AACRC,MAAAA,OAAO,CAACC,GAAR,CAAYF,GAAZ;AACAN,MAAAA,QAAQ,CAACM,GAAG,CAACG,IAAJ,CAASC,SAAT,CAAmBC,MAApB,CAAR;AACH,KAJL,EAKKC,KALL,CAKWC,GAAG,IAAI;AACVN,MAAAA,OAAO,CAACC,GAAR,CAAYK,GAAZ;AACH,KAPL;AAUH,GAXQ,EAWN,CAACZ,EAAD,CAXM,CAAT;AAcA,sBACI;AAAA,4BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI;AAAO,MAAA,IAAI,EAAC,MAAZ;AAAmB,MAAA,KAAK,EAAEA,EAA1B;AAA8B,MAAA,QAAQ,EAAEa,CAAC,IAAIZ,KAAK,CAACY,CAAC,CAACC,MAAF,CAASC,KAAV;AAAlD;AAAA;AAAA;AAAA;AAAA,YAFJ,eAGI;AAAA,gBAEQjB,KAAK,CAACkB,GAAN,CAAUlB,KAAK,iBAAI;AAAA,mBAAyBA,KAAK,CAACmB,iBAA/B,aAAsDnB,KAAK,CAACoB,IAA5D;AAAA,SAASpB,KAAK,CAACqB,OAAf;AAAA;AAAA;AAAA;AAAA,cAAnB;AAFR;AAAA;AAAA;AAAA;AAAA,YAHJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAWH;;GA7BQtB,Y;;KAAAA,Y;AA+BT,eAAeA,YAAf","sourcesContent":["import axios from \"axios\";\nimport {useEffect, useState} from \"react\";\n\n\nfunction SearchPlates() {\n    const [plate, setPlate] = useState([])\n    const [id,setId] = useState(1)\n\n    useEffect(() => {\n        axios.get('http://localhost:8080/plates/search/findByRegistrationplateContainingIgnoreCase?registrationplate='+id, {mode:  'no-cors'})\n            .then(res=> {\n                console.log(res)\n                setPlate(res.data._embedded.plates)\n            })\n            .catch(err => {\n                console.log(err)\n            })\n\n\n    }, [id])\n\n\n    return(\n        <div>\n            <h2>Search for a Plate</h2>\n            <input type=\"text\" value={id} onChange={e => setId(e.target.value)}/>\n            <ul>\n                {\n                    plate.map(plate => <li key={plate.plateid}>{plate.registrationplate} - Â£{plate.cost}</li> )\n                }\n            </ul>\n        </div>\n    )\n}\n\nexport default SearchPlates"]},"metadata":{},"sourceType":"module"}