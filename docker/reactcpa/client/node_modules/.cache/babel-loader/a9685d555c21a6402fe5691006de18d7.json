{"ast":null,"code":"var _jsxFileName = \"/Users/rileycroucher/repos/UWTSD/reactcpa/client/src/Create.js\",\n    _s = $RefreshSig$();\n\nimport { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar swearjar = require('swearjar');\n\nconst Create = () => {\n  _s();\n\n  const [plates, setPlates] = useState([]);\n  const [id, setId] = useState();\n  useEffect(() => {\n    axios.get('http://localhost:8080/plates/search/findByRegistrationplateIgnoreCase?registrationplate=' + id, {\n      mode: 'no-cors'\n    }).then(res => {\n      console.log(res.data._embedded.plates);\n      setPlates(res.data._embedded.plates);\n    }).catch(err => {\n      console.log(err);\n    });\n  }, [id]);\n  var swear = swearjar.profane(id);\n  var profanityCheck;\n\n  if (swear === true) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"box\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Create a new plate\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        className: \"registration-ui\",\n        value: id,\n        onChange: e => setId(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Please refrain from profanity\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 13\n    }, this);\n  } else {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"box\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Create a new plate\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        className: \"registration-ui\",\n        value: id,\n        onChange: e => setId(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: plates.map(plate => /*#__PURE__*/_jsxDEV(\"li\", {\n          className: \"registration-ui\",\n          children: plate.registrationplate\n        }, plate.plateid, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 45\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 13\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Search for a Plate\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      className: \"registration-ui\",\n      value: id,\n      onChange: e => setId(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 13\n    }, this), profanityCheck]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Create, \"yt1JS+nyRBs7gbp8WgATUDsfLGY=\");\n\n_c = Create;\nexport default Create;\n\nvar _c;\n\n$RefreshReg$(_c, \"Create\");","map":{"version":3,"sources":["/Users/rileycroucher/repos/UWTSD/reactcpa/client/src/Create.js"],"names":["useEffect","useState","axios","swearjar","require","Create","plates","setPlates","id","setId","get","mode","then","res","console","log","data","_embedded","catch","err","swear","profane","profanityCheck","e","target","value","map","plate","registrationplate","plateid"],"mappings":"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","sourcesContent":["import {useEffect, useState} from \"react\";\nimport axios from \"axios\";\nvar swearjar = require('swearjar');\n\nconst Create = () => {\n    const [plates, setPlates] = useState([])\n    const [id,setId] = useState( )\n\n    useEffect(() => {\n        axios.get('http://localhost:8080/plates/search/findByRegistrationplateIgnoreCase?registrationplate='+id, {mode:  'no-cors'})\n            .then(res=> {\n                console.log(res.data._embedded.plates)\n                setPlates(res.data._embedded.plates)\n            })\n            .catch(err => {\n                console.log(err)\n            })\n\n\n    }, [id])\n\n    var swear = swearjar.profane(id)\n    var profanityCheck;\n\n    if (swear===true){\n        return(\n            <div className=\"box\">\n                <h2>Create a new plate</h2>\n                <br/>\n                <input type=\"text\" className=\"registration-ui\" value={id} onChange={e => setId(e.target.value)}/>\n                <br/>\n                <p>Please refrain from profanity</p>\n            </div>)}\n    else{\n        return(\n            <div className=\"box\">\n                <h2>Create a new plate</h2>\n                <br/>\n                <input type=\"text\" className=\"registration-ui\" value={id} onChange={e => setId(e.target.value)}/>\n                <br/>\n                <ul>\n                    {\n                        plates.map(plate => <li key={plate.plateid} className=\"registration-ui\">{plate.registrationplate}</li> )\n                    }\n                </ul>\n            </div>\n        )\n\n    }\n\n    return(\n        <div>\n            <h2>Search for a Plate</h2>\n            <input type=\"text\" className=\"registration-ui\" value={id} onChange={e => setId(e.target.value)}/>\n            {profanityCheck}\n        </div>\n    )\n}\n\nexport default Create"]},"metadata":{},"sourceType":"module"}