{"ast":null,"code":"var _jsxFileName = \"/Users/rileycroucher/repos/UWTSD/reactcpa/client/src/Create.js\",\n    _s2 = $RefreshSig$();\n\nimport { useEffect, useRef, useState } from \"react\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar swearjar = require('swearjar');\n\nconst Create = () => {\n  _s2();\n\n  var _s = $RefreshSig$();\n\n  const [plates, setPlates] = useState([]);\n  const [id, setId] = useState();\n  const [customerid, setcustomerid] = useState();\n  const [paymentid, setpaymentid] = useState();\n  useEffect(() => {\n    axios.get('http://localhost:8080/plates/search/findByRegistrationplateIgnoreCase?registrationplate=' + id, {\n      mode: 'no-cors'\n    }).then(res => {\n      console.log(res.data._embedded.plates);\n      setPlates(res.data._embedded.plates);\n    }).catch(err => {\n      console.log(err);\n    });\n  }, [id]);\n  var notAvail = false;\n  var cost = 1;\n  var undefinedid = false;\n\n  if (plates.length === 0) {\n    notAvail = false;\n  } else {\n    notAvail = true;\n  }\n\n  if (id === undefined) {\n    undefinedid = true;\n  } else {\n    cost = Math.round(10000 / id.length);\n  }\n\n  var swear = swearjar.profane(id);\n  const fnameRef = useRef();\n  const snameRef = useRef();\n  const addressRef = useRef();\n  const methodRef = useRef();\n\n  const handleSubmit = () => {\n    _s();\n\n    console.log(fnameRef.current.value, snameRef.current.value, addressRef.current.value, methodRef.current.value);\n    useEffect(() => {\n      const customer = {\n        firstname: '' + fnameRef.current.value + '',\n        secondname: '' + snameRef.current.value + '',\n        address: '' + addressRef.current.value + ''\n      };\n      const payment = {\n        cost: '' + cost + '',\n        method: '' + methodRef.current.value + ''\n      };\n      axios.post('http://localhost:8080/customer', customer).then(response => setcustomerid(response.data.id));\n      axios.post('http://localhost:8080/payment', payment).then(response => setpaymentid(response.data.id));\n      const plateref = {\n        registrationplate: '' + id + '',\n        customer\n      };\n      axios.post('http://localhost:8080/plates', payment).then(response => setPaymentId(response.data.id));\n    }, []);\n  };\n\n  _s(handleSubmit, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n\n  if (undefinedid === true) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"box\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Create a new plate\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        className: \"registration-ui\",\n        value: id,\n        onChange: e => setId(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 13\n    }, this);\n  } else if (swear === true) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"box\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Create a new plate\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        className: \"registration-ui\",\n        value: id,\n        onChange: e => setId(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Please refrain from profanity\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 13\n    }, this);\n  } else if (swear === false && notAvail === true) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"box\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Create a new plate\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        className: \"registration-ui\",\n        value: id,\n        onChange: e => setId(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Plate not availible\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 13\n    }, this);\n  } else {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"box\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Create a new plate\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        className: \"registration-ui\",\n        value: id,\n        onChange: e => setId(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Plate available \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: [\"Plate cost: \\xA3\", cost]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          for: \"fname\",\n          children: \"First Name:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 59\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          id: \"fname\",\n          name: \"fname\",\n          ref: fnameRef\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 80\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 85\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"sname\",\n          children: \"Second Name:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 64\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          id: \"sname\",\n          name: \"sname\",\n          ref: snameRef\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 80\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 85\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"address\",\n          children: \"Address:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 62\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          id: \"address\",\n          name: \"address\",\n          ref: addressRef\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 86\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 91\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"paymentmethod\",\n          children: \"Payment Method (PayPal, Card, etc):\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 95\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          id: \"paymentmethod\",\n          name: \"paymentmethod\",\n          ref: methodRef\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 97\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          onClick: handleSubmit,\n          children: \"Submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 13\n    }, this);\n  }\n};\n\n_s2(Create, \"O7vxIQFFyxGAnP0nC/YaI74+HIY=\");\n\n_c = Create;\nexport default Create;\n\nvar _c;\n\n$RefreshReg$(_c, \"Create\");","map":{"version":3,"sources":["/Users/rileycroucher/repos/UWTSD/reactcpa/client/src/Create.js"],"names":["useEffect","useRef","useState","axios","swearjar","require","Create","plates","setPlates","id","setId","customerid","setcustomerid","paymentid","setpaymentid","get","mode","then","res","console","log","data","_embedded","catch","err","notAvail","cost","undefinedid","length","undefined","Math","round","swear","profane","fnameRef","snameRef","addressRef","methodRef","handleSubmit","current","value","customer","firstname","secondname","address","payment","method","post","response","plateref","registrationplate","setPaymentId","e","target"],"mappings":"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","sourcesContent":["import {useEffect, useRef, useState} from \"react\";\nimport axios from \"axios\";\nvar swearjar = require('swearjar');\n\n\nconst Create = () => {\n    const [plates, setPlates] = useState([])\n    const [id,setId] = useState( )\n    const [customerid,setcustomerid] = useState( )\n    const [paymentid,setpaymentid] = useState( )\n\n\n    useEffect(() => {\n        axios.get('http://localhost:8080/plates/search/findByRegistrationplateIgnoreCase?registrationplate='+id, {mode:  'no-cors'})\n            .then(res=> {\n                console.log(res.data._embedded.plates)\n                setPlates(res.data._embedded.plates)\n            })\n            .catch(err => {\n                console.log(err)\n            })\n\n\n    }, [id])\n\n    var notAvail =false;\n    var cost =1;\n    var undefinedid = false;\n\n    if (plates.length ===0){\n        notAvail =false;\n    }\n    else {\n        notAvail =true;\n    }\n\n    if (id === undefined){\n        undefinedid = true;\n    }\n    else {\n        cost = Math.round(10000/id.length)\n    }\n    var swear = swearjar.profane(id)\n\n    const fnameRef = useRef();\n    const snameRef = useRef();\n    const addressRef = useRef();\n    const methodRef = useRef();\n\n\n    const handleSubmit = () => {\n        console.log(fnameRef.current.value, snameRef.current.value, addressRef.current.value, methodRef.current.value);\n        useEffect(() => {\n            const customer = {\n                firstname: '' + fnameRef.current.value + '',\n                secondname: '' + snameRef.current.value + '',\n                address: '' + addressRef.current.value + ''\n            }\n            const payment = {cost: '' + cost + '', method: '' + methodRef.current.value + ''}\n            axios.post('http://localhost:8080/customer', customer)\n                .then(response => setcustomerid(response.data.id));\n            axios.post('http://localhost:8080/payment', payment)\n                .then(response => setpaymentid(response.data.id));\n            const plateref = {registrationplate: ''+id+'', customer}\n            axios.post('http://localhost:8080/plates', payment)\n                .then(response => setPaymentId(response.data.id));\n\n\n        },[]);\n    };\n\n\n    if (undefinedid===true){\n        return(\n            <div className=\"box\">\n                <h2>Create a new plate</h2>\n                <br/>\n                <input type=\"text\" className=\"registration-ui\" value={id} onChange={e => setId(e.target.value)}/>\n            </div>)}\n    else if (swear===true){\n        return(\n            <div className=\"box\">\n                <h2>Create a new plate</h2>\n                <br/>\n                <input type=\"text\" className=\"registration-ui\" value={id} onChange={e => setId(e.target.value)}/>\n                <br/>\n                <p>Please refrain from profanity</p>\n            </div>)}\n    else if (swear===false && notAvail===true){\n        return(\n            <div className=\"box\">\n                <h2>Create a new plate</h2>\n                <br/>\n                <input type=\"text\" className=\"registration-ui\" value={id} onChange={e => setId(e.target.value)}/>\n                <br/>\n                <p>Plate not availible</p>\n            </div>\n        )}\n    else {\n        return(\n            <div className=\"box\">\n                <h2>Create a new plate</h2>\n                <br/>\n                <input type=\"text\" className=\"registration-ui\" value={id} onChange={e => setId(e.target.value)}/>\n                <br/>\n                <h3>Plate available </h3>\n                <br/>\n                <h3>Plate cost: £{cost}</h3>\n                <br/>\n                <form>\n                    <label for=\"fname\">First Name:</label><br/>\n                    <input type=\"text\" id=\"fname\" name=\"fname\" ref={fnameRef}/><br/><br/>\n                    <label htmlFor=\"sname\">Second Name:</label><br/>\n                    <input type=\"text\" id=\"sname\" name=\"sname\" ref={snameRef}/><br/><br/>\n                    <label htmlFor=\"address\">Address:</label><br/>\n                    <input type=\"text\" id=\"address\" name=\"address\" ref={addressRef}/><br/><br/>\n                    <label htmlFor=\"paymentmethod\">Payment Method (PayPal, Card, etc):</label><br/>\n                    <input type=\"text\" id=\"paymentmethod\" name=\"paymentmethod\" ref={methodRef}/><br/>\n                    <button type='button' onClick={handleSubmit}>Submit</button>\n                </form>\n            </div>)}\n\n\n}\n\nexport default Create"]},"metadata":{},"sourceType":"module"}