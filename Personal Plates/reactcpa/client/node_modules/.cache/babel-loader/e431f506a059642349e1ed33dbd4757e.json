{"ast":null,"code":"var _jsxFileName = \"/Users/rileycroucher/repos/UWTSD/reactcpa/client/src/SearchPlates.js\",\n    _s = $RefreshSig$();\n\nimport axios from \"axios\";\nimport { useEffect, useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar swearjar = require('swearjar');\n\nswearjar.profane(\"hello there\"); // false\n\nfunction SearchPlates() {\n  _s();\n\n  const [plates, setPlates] = useState([]);\n  const [id, setId] = useState();\n  useEffect(() => {\n    axios.get('http://localhost:8080/plates/search/findByRegistrationplateContainingIgnoreCase?registrationplate=' + id, {\n      mode: 'no-cors'\n    }).then(res => {\n      console.log(res.data._embedded.plates);\n      setPlates(res.data._embedded.plates);\n    }).catch(err => {\n      console.log(err);\n    });\n  }, [id]);\n  var profanityCheck;\n\n  if (swearjar.profane({\n    id\n  })) {\n    profanityCheck = /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: [plates.map(plate => /*#__PURE__*/_jsxDEV(\"li\", {\n        className: \"registration-ui\",\n        children: plate.registrationplate\n      }, plate.plateid, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 37\n      }, this)), \"}\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 9\n    }, this);\n  } else {\n    return profanityCheck = /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Hello\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 13\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Search for a Plate\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      className: \"registration-ui\",\n      value: id,\n      onChange: e => setId(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 13\n    }, this), profanityCheck]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 9\n  }, this);\n}\n\n_s(SearchPlates, \"yt1JS+nyRBs7gbp8WgATUDsfLGY=\");\n\n_c = SearchPlates;\nexport default SearchPlates;\n\nvar _c;\n\n$RefreshReg$(_c, \"SearchPlates\");","map":{"version":3,"sources":["/Users/rileycroucher/repos/UWTSD/reactcpa/client/src/SearchPlates.js"],"names":["axios","useEffect","useState","swearjar","require","profane","SearchPlates","plates","setPlates","id","setId","get","mode","then","res","console","log","data","_embedded","catch","err","profanityCheck","map","plate","registrationplate","plateid","e","target","value"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,SAAR,EAAmBC,QAAnB,QAAkC,OAAlC;;;AACA,IAAIC,QAAQ,GAAGC,OAAO,CAAC,UAAD,CAAtB;;AAEAD,QAAQ,CAACE,OAAT,CAAiB,aAAjB,E,CAAiC;;AAEjC,SAASC,YAAT,GAAwB;AAAA;;AACpB,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBN,QAAQ,CAAC,EAAD,CAApC;AACA,QAAM,CAACO,EAAD,EAAIC,KAAJ,IAAaR,QAAQ,EAA3B;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACZD,IAAAA,KAAK,CAACW,GAAN,CAAU,uGAAqGF,EAA/G,EAAmH;AAACG,MAAAA,IAAI,EAAG;AAAR,KAAnH,EACKC,IADL,CACUC,GAAG,IAAG;AACRC,MAAAA,OAAO,CAACC,GAAR,CAAYF,GAAG,CAACG,IAAJ,CAASC,SAAT,CAAmBX,MAA/B;AACAC,MAAAA,SAAS,CAACM,GAAG,CAACG,IAAJ,CAASC,SAAT,CAAmBX,MAApB,CAAT;AACH,KAJL,EAKKY,KALL,CAKWC,GAAG,IAAI;AACVL,MAAAA,OAAO,CAACC,GAAR,CAAYI,GAAZ;AACH,KAPL;AAUH,GAXQ,EAWN,CAACX,EAAD,CAXM,CAAT;AAaA,MAAIY,cAAJ;;AACA,MAAIlB,QAAQ,CAACE,OAAT,CAAiB;AAACI,IAAAA;AAAD,GAAjB,CAAJ,EAA2B;AACvBY,IAAAA,cAAc,gBACd;AAAA,iBAEQd,MAAM,CAACe,GAAP,CAAWC,KAAK,iBAAI;AAAwB,QAAA,SAAS,EAAC,iBAAlC;AAAA,kBAAqDA,KAAK,CAACC;AAA3D,SAASD,KAAK,CAACE,OAAf;AAAA;AAAA;AAAA;AAAA,cAApB,CAFR;AAAA;AAAA;AAAA;AAAA;AAAA,YADA;AAMH,GAPD,MAQI;AACA,WACIJ,cAAc,gBACd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAFJ;AAIH;;AAED,sBACI;AAAA,4BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI;AAAO,MAAA,IAAI,EAAC,MAAZ;AAAmB,MAAA,SAAS,EAAC,iBAA7B;AAA+C,MAAA,KAAK,EAAEZ,EAAtD;AAA0D,MAAA,QAAQ,EAAEiB,CAAC,IAAIhB,KAAK,CAACgB,CAAC,CAACC,MAAF,CAASC,KAAV;AAA9E;AAAA;AAAA;AAAA;AAAA,YAFJ,EAGSP,cAHT;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAOH;;GAxCQf,Y;;KAAAA,Y;AA0CT,eAAeA,YAAf","sourcesContent":["import axios from \"axios\";\nimport {useEffect, useState} from \"react\";\nvar swearjar = require('swearjar');\n\nswearjar.profane(\"hello there\"); // false\n\nfunction SearchPlates() {\n    const [plates, setPlates] = useState([])\n    const [id,setId] = useState( )\n\n    useEffect(() => {\n        axios.get('http://localhost:8080/plates/search/findByRegistrationplateContainingIgnoreCase?registrationplate='+id, {mode:  'no-cors'})\n            .then(res=> {\n                console.log(res.data._embedded.plates)\n                setPlates(res.data._embedded.plates)\n            })\n            .catch(err => {\n                console.log(err)\n            })\n\n\n    }, [id])\n\n    var profanityCheck;\n    if (swearjar.profane({id})){\n        profanityCheck =\n        <ul>\n            {\n                plates.map(plate => <li key={plate.plateid} className=\"registration-ui\">{plate.registrationplate}</li> )}\n            }\n        </ul>\n    }\n    else{\n        return(\n            profanityCheck =\n            <p>Hello</p>\n        )\n    }\n\n    return(\n        <div>\n            <h2>Search for a Plate</h2>\n            <input type=\"text\" className=\"registration-ui\" value={id} onChange={e => setId(e.target.value)}/>\n                {profanityCheck}\n        </div>\n    )\n}\n\nexport default SearchPlates"]},"metadata":{},"sourceType":"module"}